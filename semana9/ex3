#include <stdio.h>

#define MAX_SIZE 100

int count(int vetor[], int tamanho, int elemento) {
    int contador = 0;
    for (int i = 0; i < tamanho; i++) {
        if (vetor[i] == elemento) {
            contador++;
        }
    }
    return contador;
}

int findIndex(int vetor[], int tamanho, int elemento) {
    for (int i = 0; i < tamanho; i++) {
        if (vetor[i] == elemento) {
            return i;
        }
    }
    return -1; 
}

void reverse(int vetor[], int tamanho) {
    int inicio = 0;
    int fim = tamanho - 1;
    while (inicio < fim) {
        int temp = vetor[inicio];
        vetor[inicio] = vetor[fim];
        vetor[fim] = temp;
        inicio++;
        fim--;
    }
}

void sort(int vetor[], int tamanho) {
    for (int i = 0; i < tamanho - 1; i++) {
        for (int j = 0; j < tamanho - i - 1; j++) {
            if (vetor[j] > vetor[j + 1]) {
                int temp = vetor[j];
                vetor[j] = vetor[j + 1];
                vetor[j + 1] = temp;
            }
        }
    }
}

void imprimirVetor(int vetor[], int tamanho) {
    for (int i = 0; i < tamanho; i++) {
        printf("%d ", vetor[i]);
    }
    printf("\n");
}

int main() {
    int vetor[MAX_SIZE] = {5, 2, 3, 2, 7, 8, 2, 1, 9, 2};
    int tamanho = 10;

    printf("Vetor original: ");
    imprimirVetor(vetor, tamanho);

    printf("Número de ocorrências de 2: %d\n", count(vetor, tamanho, 2));

    printf("Índice da primeira ocorrência de 7: %d\n", findIndex(vetor, tamanho, 7));

    reverse(vetor, tamanho);
    printf("Vetor invertido: ");
    imprimirVetor(vetor, tamanho);

    sort(vetor, tamanho);
    printf("Vetor ordenado: ");
    imprimirVetor(vetor, tamanho);

    return 0;
}
